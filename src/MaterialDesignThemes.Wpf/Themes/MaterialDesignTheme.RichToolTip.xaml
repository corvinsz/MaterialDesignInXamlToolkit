<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
  </ResourceDictionary.MergedDictionaries>


  <Style x:Name="MaterialDesignRichToolTipButton"
         TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
    <Setter Property="Padding" Value="8" />
  </Style>

  <wpf:PackIcon x:Key="MaterialDesignRichToolTipToggleContent"
                Width="24"
                Height="24"
                x:Shared="False"
                Kind="Information" />

  <Style x:Key="MaterialDesignRichToolTip" TargetType="{x:Type wpf:RichToolTip}">
    <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Content" Value="{StaticResource MaterialDesignRichToolTipToggleContent}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Foreground}" />
    <Setter Property="PopupElevation" Value="Dp6" />
    <Setter Property="Padding" Value="16,12,16,8" />
    <Setter Property="PopupUniformCornerRadius" Value="8" />
    <Setter Property="PlacementMode" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type wpf:RichToolTip}">
          <ControlTemplate.Resources>
            <!--<Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignRichToolTipButton}" />-->
            <converters:ElevationMarginConverter x:Key="ElevationMarginConverter" />
          </ControlTemplate.Resources>
          <Grid>
            <ToggleButton x:Name="PART_Toggle"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Content="{TemplateBinding Content}"
                          Cursor="Hand"
                          Foreground="{TemplateBinding Foreground}"
                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                          IsTabStop="{TemplateBinding IsTabStop}"
                          ToolTip="{TemplateBinding ToolTip}"
                          ToolTipService.Placement="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:RichToolTip}, Path=(ToolTipService.Placement)}" />
            <wpf:PopupEx x:Name="PART_Popup"
                         AllowsTransparency="True"
                         CustomPopupPlacementCallback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupPlacementMethod}"
                         IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                         Placement="Custom"
                         PlacementTarget="{Binding ElementName=PART_Toggle}"
                         PopupAnimation="Fade">
              <Grid Focusable="False">
                <wpf:Card Margin="{TemplateBinding PopupElevation, Converter={StaticResource ElevationMarginConverter}}"
                          Padding="{TemplateBinding Padding}"
                          Background="{DynamicResource MaterialDesign.Brush.Foreground}"
                          wpf:ElevationAssist.Elevation="{TemplateBinding PopupElevation}"
                          Content="{TemplateBinding PopupContent}"
                          ContentTemplate="{TemplateBinding PopupContentTemplate}"
                          Foreground="{DynamicResource MaterialDesign.Brush.Primary.Foreground}"
                          RenderOptions.ClearTypeHint="Enabled"
                          UniformCornerRadius="{TemplateBinding PopupUniformCornerRadius}" />
                <!--<ContentControl x:Name="PART_PopupContentControl"
                                Content="{TemplateBinding PopupContent}"
                                ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                Opacity="0"
                                Visibility="{TemplateBinding IsEnabled, Converter={x:Static converters:BooleanToVisibilityConverter.CollapsedInstance}}" />-->
              </Grid>
            </wpf:PopupEx>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <!--<Setter Property="ToggleContent" Value="{StaticResource MaterialDesignRichToolTipToggleContent}" />
    <Setter Property="ToolTipService.IsEnabled" Value="False" />
    <Setter Property="ToolTipService.Placement" Value="Left" />
    <Setter Property="Width" Value="56" />
    <Setter Property="wpf:ElevationAssist.Elevation" Value="Dp6" />
    <Setter Property="wpf:RippleAssist.Feedback" Value="White" />
    <Setter Property="wpf:RippleAssist.IsCentered" Value="True" />
    <Style.Triggers>
      <Trigger Property="UnfurlOrientation" Value="Horizontal">
        <Setter Property="ToolTipService.Placement" Value="Custom" />
      </Trigger>
    </Style.Triggers>-->
  </Style>

</ResourceDictionary>
